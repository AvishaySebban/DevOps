---
- hosts: localhost
  vars:
    workspace: ntm-monitoring-pkg
    monitoring_pkg: ntm-monitoring.tar.gz

  tasks:

  # Create local zip file, than it will be an input for the next task
  - name: Create zip file [monitoring_pkg]
    command: tar -zcvf {{monitoring_pkg}} {{workspace}} 
    # archive: src={{workspace}} dest={{monitoring_pkg}} 
           # type=tgz
           # verbose=yes
           # backup=yes
           
- hosts: ntmServers
  vars:
    monitoring_group: monitoring
    monitoring_user: ntmmonitoring
    monitoring_pkg: /tmp/ntm-monitoring.tar.gz
    monitoring_psutil: /tmp/psutil.tar.gz
    monitoring_home: /opt/ntm-monitoring
    monitoring_log_dir: /var/log/ntm-monitoring
   
  tasks:
  
  # Example group command from Ansible Playbooks
  - name: Create monitoring group on remote server
    group: name={{monitoring_group}} state=present

  # Add the user 'james' with a bash shell, appending the group 'admins' and 'developers' to the user's groups
  - name: Create user on remote server
    user: name={{monitoring_user}} shell=/bin/bash groups={{monitoring_group}} append=yes
  
  - name: Add to PYTHONPATH bashrc
    lineinfile: 
      line="export PYTHONPATH=$PYTHONPATH:{{monitoring_home}}/lib:{{monitoring_home}}/lib/psutil:{{monitoring_home}}/conf"
      dest=/home/{{monitoring_user}}/.bashrc 
      insertafter='EOF'
    
  # Remove old directory
  - name: Delete a directory
    file: path=/opt/ntm-monitoring-pkg state=absent recurse=no
    
  # Unarchive Python psutil package
  - name: unarchive python_psutil on remote
    unarchive: src={{monitoring_psutil}} dest=/usr/lib64/python2.6/site-packages/
    
   
   # Create a 2048-bit SSH key for user jsmith in ~jsmith/.ssh/id_rsa
## - name: put user key on remote 
##   user: name={{monitoring_user}} generate_ssh_key=yes ssh_key_bits=2048 ssh_key_file=.ssh/id_rsa

   # Example from Ansible Playbooks
  - name: unarchive ntm-monitoring on remote
    unarchive: src={{monitoring_pkg}} dest=/opt
   
   # change file ownership, group and mode. When specifying mode using octal numbers, first digit should always be 0.
  - name: Chamge files owner
    file: path={{monitoring_home}} owner={{monitoring_user}} group={{monitoring_group}} mode=0755 state=directory recurse=yes
  
  # Create LogFolder on the machines
  - name: Creates directory
    file: path={{monitoring_log_dir}} state=directory
  
  # Create CronJob
  - name: Creates weekly backup cronjob
    cron: minute="*/5" hour="*" weekday="*"
          name="ntm_monitoring"
          cron_file="ntm_monitoring_job"
          user="{{monitoring_user}}"
          job="{{monitoring_home}}/bin/execute.py --all"
  
  ##/usr/lib64/python2.6/site-packages/psutil